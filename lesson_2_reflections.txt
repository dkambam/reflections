What happens when you initialize a repository? Why do you need to do it?

	Git creates a metadata folder in the folder to make repository form the 
	current folder. This would setup git to start tracking files.



How is the staging area different from the working directory and the repository?
What value do you think it offers?

	Staging area is a seperate conceptual space that contains a subset or all of
	the files from the current working directory. It is part of the repository 
	as a part of it's metadata. It is useful to select & collect a subset of 
	files from the working directory and commit them seperately (i.e) it allows 
	us the option of commiting a subset of files and not all of them.



How can you use the staging area to make sure you have one commit per logical 
change?

	Add only the file(s) with a particular logical change to the staging area. 
	Then commit the changes in the staging area. This ensures we have one 
	logical change per commit.



What are some situations when branches would be helpful in keeping your history 
organized? How would branches help?

	Branches would be helpful when:
	1. testing experimental changes
	2. devleoping different versions of the code

	Different versions of code are logically seperate yet related as they belong
	to the same code base. Branches provide a convenient and easy mechanism to 
	honor this relationship. They keep different versions seperate by providing 
	branch diffrent labels. They also enable us to keep them together within the
	same repository. 

	Additionally, there is no overhead and associated complexity of the simplest
	alternative -- a nested fodler structure.



How do the diagrams help you visualize the branch structure?
	
	They help concisely and clearly represent the following information:
	1. Git commits have parents
	2. Git branches are labels
	3. The concept of a checked-out branch (represented by a *)
	4. Reachability: tracing back from the tip-of-a-branch
	5. There can be unreachable commits
	6. Making commits brings the branch label along with us

